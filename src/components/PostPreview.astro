---
import type { Props as SEOProps } from "./SEO.astro";
import Show from "./Show.astro";
import TagsList from "./TagsList.astro";
import WebMentionsCount from "./WebMentionsCount.astro";
import site from "../data/site.json";
import { getAllMentions, isForUrl } from "../utils/mentions.js";
import { formatDate } from "../utils/dates.ts";
import type { CollectionEntry } from "astro:content";

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;

const seo: Partial<SEOProps> = {
  title: post.data.title,
  description: post.data.description,
  image: post.data.social_image,
};

const tags = post.data.tags.map((tag: string) => {
  return {
    tag,
    url: `/tags/${tag}`,
  };
});

const url = new URL(`/blog/${post.slug}`, site.url);

const allMentions = await getAllMentions();
const webMentions = allMentions.children.filter(isForUrl(url.href));

const { remarkPluginFrontmatter } = await post.render();
---

<article>
  <a href={url}>
    <h3 class="underline">{post.data.title}</h3>
  </a>

  <time class="h6" datetime={formatDate(post.data.date)}
    >{formatDate(post.data.date)}</time
  >
  <small> â€¢ {remarkPluginFrontmatter.minutesRead} min read</small>

  <p>{seo.description}</p>

  <footer>
    <Show when={webMentions.length > 0}>
      <WebMentionsCount {webMentions} />
    </Show>

    <TagsList {tags} />
  </footer>
</article>

<style>
  article {
    &:not(:first-of-type) {
      margin-top: var(--spacer-lg);
    }

    & > a {
      display: block;
    }
  }

  h3 {
    margin-bottom: var(--spacer-tiny);
  }

  p {
    margin: var(--spacer-sm) 0;
  }

  a {
    color: inherit;
  }

  footer {
    display: flex;
    flex-direction: column;
    gap: var(--spacer-xs);

    @media (min-width: 480px) {
      & {
        flex-direction: row;
        align-items: center;
        gap: var(--spacer-sm);
      }
    }

    @media (min-width: 768px) {
      & {
        gap: var(--spacer-md);
      }
    }
  }
</style>
