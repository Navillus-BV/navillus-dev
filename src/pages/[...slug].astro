---
import HeroLayout from '../layouts/Hero.astro'
import LegalLayout from '../layouts/Legal.astro'
import PostLayout from '../layouts/Post.astro'
import {
  getPage,
  isPublished,
  hasPermalink,
  WithContent,
} from '../utils/cms.ts'

export async function getStaticPaths() {
  const pages = Astro.fetchContent('../data/pages/*.md')
    .filter(isPublished)
    .filter((page) => !hasPermalink('/')(page) && !hasPermalink('/blog')(page))
    .map(getPage)

  const paths = pages.map((page: CMS.Page) => ({
    params: {
      slug: page.permalink.slice(1),
    },
    props: page,
  }))

  return paths
}

const page = Astro.props as WithContent<CMS.Page>

function isHeroPage(page: CMS.Page): page is CMS.HeroPage {
  return page.template === 'hero'
}

function isLegalPage(page: CMS.Page): page is CMS.LegalPage {
  return page.template === 'legal'
}

function isPostPage(page: CMS.Page): page is CMS.BlogPostPage {
  return page.template === 'post'
}

const Layout = isHeroPage(page)
  ? HeroLayout
  : isLegalPage(page)
  ? LegalLayout
  : isPostPage(page)
  ? PostLayout
  : HeroLayout
---

<Layout {...page} />
