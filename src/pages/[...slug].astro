---
import LegalLayout from '../layouts/Legal.astro'
import PageLayout from '../layouts/Page.astro'
import PostLayout from '../layouts/Post.astro'
import { getPage, isPublished, hasPermalink } from '../utils/cms.ts'

export async function getStaticPaths() {
  const pages = Astro.fetchContent('../data/pages/*.md')
    .filter(isPublished)
    .filter((page) => !hasPermalink('/')(page) && !hasPermalink('/blog')(page))
    .map(getPage)

  const paths = pages.map((page: CMS.Page) => ({
    params: {
      slug: page.permalink.slice(1),
    },
    props: page,
  }))

  console.log(paths.map(p => p.params))

  return paths
}

const page = Astro.props as CMS.Page

function isContentPage(page: CMS.Page): page is CMS.ContentPage {
  return page.template === 'page'
}

function isLegalPage(page: CMS.Page): page is CMS.LegalPage {
  return page.template === 'legal'
}

function isPostPage(page: CMS.Page): page is CMS.PostPage {
  return page.template === 'post'
}

const Layout = isContentPage(page)
  ? PageLayout
  : isLegalPage(page)
  ? LegalLayout
  : isPostPage(page)
  ? PostLayout
  : PageLayout
---

<Layout {...page}>
  {page.content.html}
</Layout>
