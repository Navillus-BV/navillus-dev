---
import type { GetStaticPaths } from "astro";
import PostPreview from "../../../components/PostPreview.astro";
import UIBlock from "../../../components/blocks/UIBlock.astro";
import Layout from "../../../layouts/Hero.astro";
import { uniq } from "../../../utils/uniq.ts";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

function getTitle(tag: string) {
  return `Posts tagged "${tag}"`;
}

function getDescription(tag: string) {
  return `All posts from the Navillus Blog tagged with “${tag}”`;
}

export const getStaticPaths = (async ({ paginate }) => {
  function sortPosts(a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) {
    return b.data.date.getTime() - a.data.date.getTime();
  }

  const allPosts = await getCollection("blog").then((posts) =>
    posts.filter((post) => post.data.published).sort(sortPosts)
  );

  const allTags: string[] = uniq(allPosts.map((post) => post.data.tags).flat());

  return allTags.flatMap((tag) => {
    const posts = allPosts.filter((p) => p.data.tags.includes(tag));

    return paginate(posts, {
      params: { tag },
      pageSize: 25,
    });
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { page } = Astro.props;
const { data: posts } = page;

const tagPage = await getEntry("pages", "tag");

const title = getTitle(tag);

tagPage.data.title = title;
tagPage.data.description = getDescription(tag);
---

<Layout {...tagPage}>
  <UIBlock {title} alt>
    {posts.map((post) => <PostPreview post={post} />)}
  </UIBlock>
</Layout>
